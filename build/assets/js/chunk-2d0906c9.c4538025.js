(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0906c9"],{3122:function(t,e,o){"use strict";o.r(e);var a,n,s=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("layout",{attrs:{bgColor:"hsl(0,0%,15%)",enableTopOffset:""}},[o("div",{staticClass:"page-favorite-root",style:t.style},[t._v(" 对于问题一，传参的方法对于多层嵌套的组件将会非常繁琐，并且对于兄弟组件间的状态传递无能为力。对于问题二，我们经常会采用父子组件直接引用或者通过事件来变更和同步状态的多份拷贝。以上的这些模式非常脆弱，通常会导致无法维护的代码。 因此，我们为什么不把组件的共享状态抽取出来，以一个全局单例模式管理呢？在这种模式下，我们的组件树构成了一个巨大的“视图”，不管在树的哪个位置，任何组件都能获取状态或者触发行为！ 通过定义和隔离状态管理中的各种概念并通过强制规则维持视图和状态间的独立性，我们的代码将会变得更结构化且易维护。 这就是 Vuex 背后的基本思想，借鉴了 Flux、Redux 和 The Elm Architecture。与其他模式不同的是，Vuex 是专门为 Vue.js 设计的状态管理库，以利用 Vue.js 的细粒度数据响应机制来进行高效的状态更新。 如果你想交互式地学习 Vuex，可以看这个 Scrimba 上的 Vuex 课程，它将录屏和代码试验场混合在了一起，你可以随时暂停并尝试。 ")])])},u=[],l=o("5530"),c=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("layout",{attrs:{topOffset:t.topOffset,enableTopOffset:t.enableTopOffset,enableBottomOffset:t.enableBottomOffset,showThumb:t.showThumb,thumbRadius:t.thumbRadius,bgColor:t.bgColor}},[o("div",{style:t.style},[t._t("default")],2)])},p=[],f=(o("b4fb"),o("513c"),o("faa0")),r=o("9f3a"),b={extends:f["a"].components.ScrollLayout,props:{topOffset:{type:String,default:"0px"},enableTopOffset:{type:Boolean,default:!1},enableBottomOffset:{type:Boolean,default:!1},showThumb:{type:Boolean,default:!1},thumbSize:{type:Number,default:4},thumbRadius:{type:Boolean,default:!0},bgColor:{type:String,default:"hsl(0,0%,98%)"}},data:function(){return{appbarHeight:["".concat(204,"px"),"".concat(68,"px")],bottombarHeight:["".concat(68,"px"),"".concat(68,"px"),"".concat(0,"px")]}},computed:Object(l["a"])({paddingMix:function(){var t=this.appbarHeight[this.getAppbarStatusIndex],e=this.bottombarHeight[this.getBottombarStatusIndex],o=this.enableTopOffset?"calc(".concat(t," + ").concat(this.topOffset,")"):0,a=this.enableBottomOffset?e:0;return[o,0,a,this.showThumb?4:0]},durationMix:function(){return 300}},Object(r["b"])(["getAppbarStatusIndex","getBottombarStatusIndex"])),methods:Object(l["a"])(Object(l["a"])({},Object(r["c"])(["setAppbarStatusByIndex"])),{},{scroll:function(t){var e=this.$refs.layout.scrollTop,o=0==e?0:1;o!=this.getAppbarStatusIndex&&this.setAppbarStatusByIndex(o),this.$emit("handleScroll",t,this.$refs.layout)}})},i=b,h=o("2877"),d=Object(h["a"])(i,a,n,!1,null,null,null),m=d.exports,y={components:{layout:m},props:{topOffset:{type:String,default:"0px"},enableTopOffset:{type:Boolean,default:!1},enableBottomOffset:{type:Boolean,default:!1},showThumb:{type:Boolean,default:!1},thumbRadius:{type:Boolean,default:!0},bgColor:{type:String,default:"hsl(0,0%,98%)"}},computed:{style:function(){return{minHeight:"100vh",width:"100%",height:"auto"}}},methods:Object(l["a"])({},Object(r["c"])(["setAppbarStatusByIndex"])),mounted:function(){this.setAppbarStatusByIndex(0)}},x=y,O=Object(h["a"])(x,c,p,!1,null,null,null),g=O.exports,B={components:{layout:g},computed:{style:function(){return{}}},methods:Object(l["a"])({},Object(r["c"])(["setAppbarTitleThemeByIndex"])),mounted:function(){this.setAppbarTitleThemeByIndex(1)}},S=B,T=(o("dccb"),Object(h["a"])(S,s,u,!1,null,"c2a606b6",null));e["default"]=T.exports},dccb:function(t,e,o){"use strict";var a=o("ef32"),n=o.n(a);n.a},ef32:function(t,e,o){}}]);
//# sourceMappingURL=chunk-2d0906c9.c4538025.js.map